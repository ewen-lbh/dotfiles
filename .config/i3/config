# vim: filetype=i3config
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty
# the cooler ~~daniel~~ terminal
bindsym $mod+Shift+Return exec cool-retro-term
# start a browser
bindsym $mod+b exec --no-startup-id qutebrowser
# start an alternative browser
bindsym $mod+Shift+b exec --no-startup-id firefox

# smart_gaps on
gaps inner 30
gaps top -30
gaps bottom -30

for_window [class="^.*"] border pixel 0

# kill focused window
bindsym $mod+Shift+q kill

# program launcher
bindsym $mod+d exec "rofi -show drun -matching fuzzy -drun-match-fields name,generic -modi window,drun,ssh,file-browser fb:~/.config/rofi/rofi-fb"
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right


# split in horizontal orientation
bindsym $mod+c split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+t layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# TODO: $mod+space : switch keyboard layout

# lock
# also press caps_lock w/ xdotool so that the caps lock state does not change
bindsym $mod+Caps_Lock exec xdotool key Caps_Lock && betterlockscreen --lock 

# lock on startup for laptop (no need for desktop)
exec --no-startup-id test `hostname` = "voyager" && betterlockscreen --lock 

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym ?? focus child

# take screenhots
bindsym --release Shift+Print exec scrot --select --freeze -e 'mv $f /tmp/screenshot.png' && cp /tmp/screenshot.png ~/screenshots/$(date --iso-8601=seconds).png && xclip -selection clipboard -target image/png -i /tmp/screenshot.png
bindsym --release Print exec scrot -e 'mv $f ~/screenshots/$(date --iso-8601=seconds).png'

# workspace_auto_back_and_forth true

# Define names for monitors
set $primary HDMI-A-0
set $secondary DVI-D-0

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1  1
set $ws2  2
set $ws3  3
set $ws4  4
set $ws5  5
set $ws6  6
set $ws7  7
set $ws8  8
set $ws9  9
set $ws10 10

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# assign workspaces to monitors
workspace $ws9 output $secondary
workspace $ws8 output $secondary
workspace $ws10 output $secondary
workspace $ws7 output $secondary
# $ws2 is only for secondary browsers, main browsers should be spawned on $ws1
workspace $ws2 output $secondary 
workspace $ws3 output $primary
workspace $ws1 output $primary

# move current workspace to other monitor
bindsym $mod+ctrl+l move workspace to output right
bindsym $mod+ctrl+h move workspace to output left

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# border_radius 4

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
bindsym $mod+e mode "default"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)

exec_always --no-startup-id picom --config ~/.config/picom.conf -b --experimental-backends
exec_always --no-startup-id ibus-daemon -drx
exec_always --no-startup-id sh ~/.config/polybar/run_polybar.sh
exec_always --no-startup-id feh --bg-fill --no-xinerama ~/.config/wallpaper.png

# Enable natural scrolling for the trackpad
exec --no-startup-id xinput set-prop "ELAN1400:00 04F3:30AD Touchpad" "libinput Natural Scrolling Enabled" 1
# Bind compose key to rctrl
exec --no-startup-id setxkbmap -option compose:rctrl

# Assign windows to workspaces
assign [class="discord"] $ws10

# Make windows floating

# Autostart some daemons
exec_always --no-startup-id clipmenud
exec --no-startup-id test `hostname` = "stealth" && ckb-next --background

# Adjust brightness
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight +10
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -10
bindsym shift+XF86MonBrightnessUp exec --no-startup-id xbacklight +1
bindsym shift+XF86MonBrightnessDown exec --no-startup-id xbacklight -1

# Toggle touchpad
bindsym XF86TouchpadToggle exec /home/ewen/.config/i3/toggle_touchpad.fish

# Media keybinds
bindsym $mod+ctrl+Right exec playerctl  next || spt pb --next
bindsym $mod+ctrl+Left exec playerctl  previous || spt pb --previous
bindsym $mod+ctrl+space exec test `playerctl  status` = "Playing" && playerctl  pause || playerctl  play
bindsym XF86AudioNext exec playerctl  next || spt pb --next
bindsym XF86AudioPrev exec playerctl  previous || spt pb --previous
bindsym XF86AudioPlay exec test `playerctl  status` = "Playing" && playerctl  pause || playerctl  play

bindsym $mod+ctrl+Up exec spt pb --like
bindsym $mod+ctrl+Down exec spt pb --shuffle
bindsym $mod+ctrl+Insert exec rofi-spotify -a
bindsym $mod+ctrl+Prior exec rofi-spotify -st
# scroll lock cuz repeat "locks scrolling between songs"
bindsym $mod+ctrl+Scroll_Lock exec spt pb --repeat
# bindsym $mod+ctrl+Next exec Todo: Next & Prior keys: seek in track

# Launch rofi file browser
bindsym $mod+z exec rofi -show file-browser -matching fuzzy

# Launch rofi bitwarden
bindsym $mod+p exec bwmenu

# Launch rofi clipboard manager
bindsym $mod+Shift+ugrave exec CM_LAUNCHER=rofi clipmenu


# Launch rofi power menu ("power" is used loosesly here, I tend to shove unrelated, misc. stuff here)
bindsym $mod+x exec $HOME/.config/rofi/powermenu 
bindsym $mod+g exec $HOME/.config/rofi/work_on
bindsym $mod+i exec $HOME/.config/rofi/edit_dotfiles

# Origin game launcher
# see https://github.com/lutris/docs/blob/master/Origin.md#blank-window-with-i3-wm
for_window [instance="origin.exe"] floating enable

# Startup applications
# exec --no-startup-id i3-msg 'workspace 2; exec kitty qutebrowser; workspace 7; exec kitty -d $HOME/.dotfiles; exec kitty -d $HOME/.dotfiles fish -c lazygit; workspace 8; layout tabbed; exec qutebrowser mail.ewen.works mail.google.com; workspace 9; exec spotifyd; exec qutebrowser open.spotify.com; workspace 10; layout tabbed; exec kitty fish -c tiny; exec kitty fish -c gomuks; exec discord; workspace 1; exec qutebrowser https://github.com/issues?q=is%3Aopen+is%3Aissue+author%3Aewen-lbh+archived%3Afalse+-repo%3Aewen-lbh%2Fgh-api-playground'

# i3expo-ng (Overview of all workspaces)
exec_always --no-startup-id "i3expod.py -f -w ~/.config/wallpaper.png"
bindsym $mod+Tab exec --no-startup-id ~/.config/i3/open_i3expo

# setup compose key
exec --no-startup-id setxkbmap -option compose:rwin

# start udiskie (automount USB devices)
exec --no-startup-id udiskie

# start Scream (for audio passthrough in RDPWindows)

exec --no-startup-id scream -o pulse -i virbr0 
